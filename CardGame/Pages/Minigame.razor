@page "/minigame"
@using CardGame.Data
@using ServiceContracts

@inject IServiceManager _services
<span>User</span>
<input type="text" @bind-value=PlayerName/>
<button @onclick="SetName">Login</button>

<div>@GameTable.PlayerName</div>

<h1 class="text-primary">Game</h1>
<h3 class="text-warning">Remaining cards: @GameTable.CardCount()</h3>
<h3 class="text-danger">Used cards: @GameTable.UsedCardCount()</h3>

<button class="btn btn-primary" @onclick="GameTable.ReplaceCards">Draw new cards</button>

@if (GameTable.Deck is not null)
{
    <Deck MinigameCards=@GameTable.Deck></Deck>
}

@code {

    public string PlayerName { get; set; } 
    
    public MinigameTable GameTable { get; set; }

    private readonly int _deckSize = 5;

    protected override async Task OnInitializedAsync()
    {
        GameTable = new MinigameTable(_services);
        GameTable.CreateCardStack();
        GameTable.ShuffleCardStack();
        GameTable.TakeCards(_deckSize);
        StateHasChanged();
    }
    private void SetName()
    {
        GameTable.SetPlayerName(PlayerName);
    }

}
